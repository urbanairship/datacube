<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.urbanairship</groupId>
  <artifactId>datacube</artifactId>
  <version>2.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>datacube</name>
  <description>OLAP cube-like streaming aggregate library</description>
  <url>http://github.com/urbanairship/datacube</url>

  <build>
    <plugins>
      <!-- Maven 2 won't build as Java 1.6 unless we configure this -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- Include test jar as a build artifact -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
     </plugins>
  </build>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://@github.com/urbanairship/datacube.git</connection>
    <developerConnection>scm:git:git@github.com:urbanairship/datacube.git</developerConnection>
    <url>git@github.com:urbanairship/datacube.git</url>
    <tag>datacube-1.2.0</tag>
  </scm>

  <!-- Sonatype requires this element to use their nexus repo -->
  <developers>
    <developer>
      <id>dave</id>
      <name>Dave Revell</name>
      <email>dave@urbanairship.com</email>
      <url>http://urbanairship.com</url>
      <organization>Urban Airship</organization>
      <organizationUrl>http://urbanairship.com</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
    <developer>
      <id>dan</id>
      <name>Dan Colish</name>
      <email>dcolish@urbnairship.com</email>
      <url>http://urbanairship.com</url>
      <organization>Urban Airship</organization>
      <organizationUrl>http://urbanairship.com</organizationUrl>
      <roles>
        <role>maintainer</role>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
  </developers>

  <profiles>
    <!-- Set hbaseVersion if not specified on the command line -->
    <profile>
      <id>set_default_hbase_version</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!hbaseVersion</name>
        </property>
      </activation>
      <properties>
        <hbaseVersion>0.94.0</hbaseVersion>
      </properties>
    </profile>

    <profile>
      <!-- Set hadoopVersion if not specified on the command line -->
      <id>set_default_hadoop_version</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!hadoopVersion</name>
        </property>
      </activation>
      <properties>
        <hadoopVersion>1.0.3</hadoopVersion>
      </properties>
    </profile>

    <!--  We want to be able to deploy artifacts with various classifiers. We want
          a different classifier for each combination of hbaseVersion and hadoopVersion.
          We also need to be able to produce an artifact with no classifier, which will
          use the default hadoop and hbase versions. To deploy a "main artifact" with
          no classifier, we h -->
    <profile>
      <id>set-classifier-since-hbaseVersion-set-manually</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>hbaseVersion</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <extensions>false</extensions>
            <inherited>true</inherited>
            <configuration>
              <classifier>hbase${hbaseVersion}-hadoop${hadoopVersion}</classifier>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>set-classifier-since-hadoopVersion-set-manually</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>hadoopVersion</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <extensions>false</extensions>
            <inherited>true</inherited>
            <configuration>
              <classifier>hbase${hbaseVersion}-hadoop${hadoopVersion}</classifier>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- Uncomment this repo to build against CDH hbase if desired -->
  <!-- <repositories>
    <repository>
      <id>repository.cloudera.com</id>
      <url>https://repository.cloudera.com/content/repositories/releases/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories> -->

  <dependencies>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>2.1.2</version>
      <!-- HBase uses an older version of slf4j than yammer metrics,
           we want to use HBase's version -->
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>15.0</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>2.0.1</version>
    </dependency>
    <!-- Test Deps -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbaseVersion}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbaseVersion}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-test</artifactId>
      <version>${hadoopVersion}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>${hadoopVersion}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>
</project>
