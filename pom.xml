<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.urbanairship</groupId>
  <artifactId>datacube</artifactId>
  <version>1.2.10-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>datacube</name>
  <description>OLAP cube-like streaming aggregate library</description>
  <url>http://github.com/urbanairship/datacube</url>

  <distributionManagement>
    <repository>
      <id>releases</id>
      <url>http://nexus.prod.urbanairship.com/content/repositories/releases</url>
    </repository>

    <snapshotRepository>
      <id>releases</id>
      <url>http://nexus.prod.urbanairship.com/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <plugins>
      <!-- Maven 2 won't build as Java 1.6 unless we configure this -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- Include test jar as a build artifact -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- This attaches a -javadoc.jar artifact to the build -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <tagBase>git://github.com/urbanairship/datacube</tagBase>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://@github.com/urbanairship/datacube.git</connection>
    <developerConnection>scm:git:git@github.com:urbanairship/datacube.git</developerConnection>
    <url>git@github.com:urbanairship/datacube.git</url>
    <tag>datacube-1.2.0</tag>
  </scm>

  <!-- Sonatype requires this element to use their nexus repo -->
  <developers>
    <developer>
      <id>dave</id>
      <name>Dave Revell</name>
      <email>dave@urbanairship.com</email>
      <url>http://urbanairship.com</url>
      <organization>Urban Airship</organization>
      <organizationUrl>http://urbanairship.com</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
  </developers>

  <profiles>
    <!-- Set hbaseVersion if not specified on the command line -->
    <profile>
      <id>set_default_hbase_version</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!hbaseVersion</name>
        </property>
      </activation>
      <properties>
        <hbaseVersion>0.94.0</hbaseVersion>
      </properties>
    </profile>

    <profile>
      <!-- Set hadoopVersion if not specified on the command line -->
      <id>set_default_hadoop_version</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!hadoopVersion</name>
        </property>
      </activation>
      <properties>
        <hadoopVersion>1.0.3</hadoopVersion>
      </properties>
    </profile>

    <!--  We want to be able to deploy artifacts with various classifiers. We want
          a different classifier for each combination of hbaseVersion and hadoopVersion.
          We also need to be able to produce an artifact with no classifier, which will
          use the default hadoop and hbase versions. To deploy a "main artifact" with
          no classifier, we h -->
    <profile>
      <id>set-classifier-since-hbaseVersion-set-manually</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>hbaseVersion</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <extensions>false</extensions>
            <inherited>true</inherited>
            <configuration>
              <classifier>hbase${hbaseVersion}-hadoop${hadoopVersion}</classifier>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>set-classifier-since-hadoopVersion-set-manually</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>hadoopVersion</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <extensions>false</extensions>
            <inherited>true</inherited>
            <configuration>
              <classifier>hbase${hbaseVersion}-hadoop${hadoopVersion}</classifier>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.6</version>
    </dependency>

    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>2.0.0-BETA18</version>
      <!-- HBase uses an older version of slf4j than yammer metrics,
           we want to use HBase's version -->
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>12.0.1</version>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.1</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbaseVersion}</version>
      <exclusions>
        <exclusion>
          <artifactId>jersey-json</artifactId>
          <groupId>com.sun.jersey</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jsp-2.1</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>servlet-api-2.5</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-jaxrs</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-mapper-asl</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-server</artifactId>
          <groupId>com.sun.jersey</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-core</artifactId>
          <groupId>com.sun.jersey</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-core-asl</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jruby-complete</artifactId>
          <groupId>org.jruby</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jasper-compiler</artifactId>
          <groupId>tomcat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-xc</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jsp-api-2.1</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jaxb-api</artifactId>
          <groupId>javax.xml.bind</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-util</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>netty</artifactId>
          <groupId>org.jboss.netty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jasper-runtime</artifactId>
          <groupId>tomcat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>servlet-api</artifactId>
          <groupId>javax.servlet</groupId>
        </exclusion>
        <exclusion>
          <artifactId>avro</artifactId>
          <groupId>org.apache.avro</groupId>
        </exclusion>
        <exclusion>
          <artifactId>avro-ipc</artifactId>
          <groupId>org.apache.avro</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Test Deps -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbaseVersion}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-test</artifactId>
      <version>${hadoopVersion}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>${hadoopVersion}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>
</project>
