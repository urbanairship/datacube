<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.urbanairship</groupId>
  <artifactId>datacube</artifactId>
  <version>1.1.6</version>

  <name>datacube</name>
  <url>http://urbanairship.com</url>

  <build>
    <plugins>
      <!-- Maven 2 won't build as Java 1.6 unless we configure this -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <properties>
    <hbaseversion>0.90.4</hbaseversion>
  </properties> 

  <profiles>
    <!-- Set hbaseVersion if not specified on the command line -->
    <profile>
      <id>set_default_hbase_version</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!hbaseVersion</name>
        </property>
      </activation>
      <properties>
        <hbaseVersion>0.90.6-cdh3u4</hbaseVersion>
      </properties>
    </profile>

    <profile>
      <!-- Set hadoopVersion if not specified on the command line -->
      <id>set_default_hadoop_version</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!hadoopVersion</name>
        </property>
      </activation>
      <properties>
        <hadoopVersion>0.20.2-cdh3u4</hadoopVersion>
      </properties>
    </profile>
  </profiles>




  <!-- Include the Cloudera repo to build against CDH hbase if desired -->
  <repositories>
    <repository>
      <id>repository.cloudera.com</id>
      <url>https://repository.cloudera.com/content/repositories/releases/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <packaging>jar</packaging>

  <dependencies>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>2.1.2</version>
      <!-- HBase uses an older version of slf4j than yammer metrics,
           we want to use HBase's version -->
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>11.0.2</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.6.2</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
             
    <!-- Test Deps -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbaseVersion}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbaseVersion}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-test</artifactId>
      <version>${hadoopVersion}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>${hadoopVersion}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>
</project>
